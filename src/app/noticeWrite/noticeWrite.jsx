// app/noticeWrite/page.jsx
'use client';

import React, { useState, useEffect } from 'react';
import { useRouter } from 'next/navigation';
import axios from 'axios';
import './noticeWrite.css';

export default function NoticeWritePage() {
    const router = useRouter();

    // ‚îÄ‚îÄ‚îÄ 1) Ìèº ÏÉÅÌÉú Í¥ÄÎ¶¨ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
    const [subject, setSubject] = useState('');
    const [content, setContent] = useState(''); // Îã®Ïàú ÌÖçÏä§Ìä∏
    const [highlight, setHighlight] = useState('false'); // 'true' or 'false'

    // ‚îÄ‚îÄ‚îÄ 2) Í¥ÄÎ¶¨Ïûê Ïó¨Î∂Ä Ï≤¥ÌÅ¨ ‚îÄ‚îÄ‚îÄ
    const [currentUser, setCurrentUser] = useState(null);
    useEffect(() => {
        const storedUser = sessionStorage.getItem('user_id');
        const isAdmin = sessionStorage.getItem('isAdmin');
        console.log("üßæ user_id:", storedUser);
        console.log("üõ°Ô∏è isAdmin:", isAdmin);

        setCurrentUser(storedUser);

        if (isAdmin !== '1') {
            console.warn("‚õîÔ∏è Í¥ÄÎ¶¨Ïûê ÏïÑÎãò ‚Üí Î¶¨Ïä§Ìä∏Î°ú Î¶¨Îã§Ïù¥Î†âÌä∏");
            router.push('/noticeList');
        }
    }, [router]);

    // ‚îÄ‚îÄ‚îÄ 3) Change Ìï∏Îì§Îü¨ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
    const handleSubjectChange = (e) => setSubject(e.target.value);
    const handleContentChange = (e) => setContent(e.target.value);
    const handleHighlightChange = (e) => setHighlight(e.target.value);

    // ‚îÄ‚îÄ‚îÄ 4) ‚ÄúÎÇ¥Ïö©Ïù¥ ÎπÑÏñ¥ ÏûàÎäîÏßÄ‚Äù Ï≤¥ÌÅ¨ ‚îÄ‚îÄ‚îÄ
    const isContentEmpty = () => content.trim() === '';

    // ‚îÄ‚îÄ‚îÄ 5) Ìèº Ï†úÏ∂ú(Í≥µÏßÄ Îì±Î°ù) ‚îÄ‚îÄ‚îÄ
    const handleSubmit = async (e) => {
        e.preventDefault();
        if (!subject.trim() || isContentEmpty()) {
            alert('Ï†úÎ™©Í≥º ÎÇ¥Ïö©ÏùÑ Î™®Îëê ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.');
            return;
        }

        try {
            const payload = {
                user_id: currentUser,
                subject: subject.trim(),
                content: content,
                highlight: highlight === 'true',
            };
            const res = await axios.post('http://localhost/notice_write', payload);
            if (res.data.success) {
                alert('Í≥µÏßÄÏÇ¨Ìï≠Ïù¥ Ï†ïÏÉÅ Îì±Î°ùÎêòÏóàÏäµÎãàÎã§.');
                router.push('/noticeList');
            } else {
                alert('Í≥µÏßÄÏÇ¨Ìï≠ Îì±Î°ùÏóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.');
            }
        } catch (err) {
            console.error('[NoticeWrite] error:', err);
            alert('Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§. ÏΩòÏÜîÏùÑ ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî.');
        }
    };

    // ‚îÄ‚îÄ‚îÄ 6) Ï∑®ÏÜå Î≤ÑÌäº Ìï∏Îì§Îü¨ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
    const handleCancel = () => {
        router.push('/noticeList');
    };

    return (
        <div className="notice-write-container">
            <form onSubmit={handleSubmit}>
                <table className="notice-form-table">
                    <tbody>
                    {/* Ï†úÎ™© Ìñâ */}
                    <tr>
                        <th>
                            Ï†úÎ™©<span className="required-star">*</span>
                        </th>
                        <td>
                            <input
                                type="text"
                                className="notice-input-title"
                                placeholder="Ï†úÎ™©ÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî."
                                value={subject}
                                onChange={handleSubjectChange}
                                maxLength={100}
                                required
                            />
                        </td>
                    </tr>

                    {/* ÎÇ¥Ïö© Ìñâ */}
                    <tr>
                        <th>
                            ÎÇ¥Ïö©<span className="required-star">*</span>
                        </th>
                        <td>
                <textarea
                    className="notice-textarea-content"
                    placeholder="ÎÇ¥Ïö©ÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî."
                    value={content}
                    onChange={handleContentChange}
                    required
                />
                        </td>
                    </tr>
                    </tbody>
                </table>

                {/* Ï§ëÏöî Í≥µÏßÄ ÏÑ§Ï†ï(ÎùºÎîîÏò§) */}
                <div className="bottom-radio-group">
                    <span className="radio-label">Ï§ëÏöî Í≥µÏßÄ ÏÑ§Ï†ï</span>
                    <label className="radio-item">
                        <input
                            type="radio"
                            name="highlight"
                            value="true"
                            checked={highlight === 'true'}
                            onChange={handleHighlightChange}
                        />
                        ÏÑ§Ï†ï
                    </label>
                    <label className="radio-item">
                        <input
                            type="radio"
                            name="highlight"
                            value="false"
                            checked={highlight === 'false'}
                            onChange={handleHighlightChange}
                        />
                        ÎπÑÏÑ§Ï†ï
                    </label>
                </div>

                {/* Îì±Î°ù / Ï∑®ÏÜå Î≤ÑÌäº (Ïª®ÌÖåÏù¥ÎÑà Î∞îÎã• Ïö∞Ï∏°Ïóê Í≥†Ï†ï) */}
                <div className="button-group">
                    <button type="submit" className="btn-submit">
                        Îì±Î°ù
                    </button>
                    <button type="button" className="btn-cancel" onClick={handleCancel}>
                        Ï∑®ÏÜå
                    </button>
                </div>
            </form>
        </div>
    );
}
